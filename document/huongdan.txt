Build a Complete React Admin Dashboard App | React, Material UI, Bootstrap 4, Light & Dark Mode
https://www.youtube.com/watch?v=K9WxoSf7zkw&list=PLhFBHuT4t3aApRKcTgTi3Sfu6zudkg7bW&index=10
Mẫu: https://dashboardreactapplication.netlify.app/

Video 1
npx create-react-app pingpong
cd pingpong
npm start

Xóa index.css, App.test.js, logo.svg

Tạo src -> components
Tạo src -> pages
Tạo src -> assets -> images

App.css
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');
body {
  font-family: "Open Sans", sans-serif;
}

npm start để kiểm tra. Font chữ thay đổi là đúng.

npm install react-router-dom

Cài material ui
Default installation: npm install @mui/material @emotion/react @emotion/styled
With styled-components: npm install @mui/material @mui/styled-engine-sc styled-components
Icons: npm install @mui/icons-material

==============================================================
Video 2: navbar

5:37
Thêm đường dẫn đến <Dashboard />

6:10
Tạo components -> Header -> index.js
const Header = () => {
    return (
        <>
            <header></header>
        </>
    )
}
export default Header;

7:00
Thêm <Header/> vào App.js

10:22
Thêm CSS vào App.css


11:00
Tạo Logo, CSS
App.css
header {width: 100%; height: 70px; background: #FFF;}
header .row {margin: 0px !important;}
header .logo {text-decoration: none;}
header .logo img{width: 45px;}
header .logo span{color: #292929; font-weight: 800; font-size: 24px;}


16:15
Thêm Material UI.
Header thêm
import Button from '@mui/material/Button';
import { MdMenuOpen, MdOutlineMenu } from "react-icons/md";

22:20
Làm nút search

28:00
Tạo các nút khác
<div className="col-sm-7 d-flex align-items-center justify-content-end part3 pl-4">
    <Button className="rounded-circle mr-3"><MdOutlineLightMode/></Button>
    <Button className="rounded-circle mr-3"><IoCartOutline/></Button>
    <Button className="rounded-circle mr-3"><MdOutlineMailOutline/></Button>
    <Button className="rounded-circle mr-3"><FaRegBell/></Button>
</div>

38:20
Tạo userInfo (chữ kế bên avatar)

40:00
Chỉnh sửa kích thước chữ

44:00
Lên material ui xem cách làm select, list, account menu...
Vào phần account menu copy đoạn code bên dưới mang vào Header

const [anchorEl, setAnchorEl] = React.useState(null);
    const open = Boolean(anchorEl);
    const handleClick = (event) => {
      setAnchorEl(event.currentTarget);
    };
    const handleClose = () => {
      setAnchorEl(null);
    };

Copy phần import và tất cả phần trong thẻ <Menu></Menu>

Sau đó xóa PaperProps, sửa menu cho giống mẫu.

55:50
Tương tự, làm menu cho nút Notification
Copy menu của Account, đặt bên dưới nút <Button className="rounded-circle" onClick={handleOpenNotificationsDrop}><FaRegBell/></Button>
Sửa anchorEl={isOpenNotificationDrop}
open={openNotifications}


Kéo lên trên, tạo
const [isOpenNotificationDrop, setisOpenNotificationDrop] = useState(false);
const openMyAcc = Boolean(anchorEl);
const openNotifications = Boolean(isOpenNotificationDrop);
const handleOpenNotificationsDrop = () => {
    setisOpenNotificationDrop(true);
};
const handleCloseNotificationsDrop = () => {
    setisOpenNotificationDrop(false);
};

58:10
Cho cả nút Notification và menu vào 1 <div>

1:07:30
Xóa .myAcc trong CSS

1:18:50
Copy thêm nhiều MenuItem

1:20:55
Tạo scrollbar cho Notification
<div className="scroll"> bao quanh các MenuItem

1:25:06
Tạo nút View All cho Notification



==============================================================
Video 3: menu Sidebar

Tạo src -> components -> Sidebar

App.js
function App() {
  return (
    <BrowserRouter>
      <Header/>
      <div className='main d-flex'>
        <div className='sidebarWrapper'>
          <Sidebar/>
        </div>

        <div className='content'>
          <Routes>
            <Route path="/" exact={true} element={<Dashboard />} />
            <Route path="/dashboard" exact={true} element={<Dashboard />} />
          </Routes>
        </div>
      </div>
    </BrowserRouter>
  );
}

9:20
Tạo nút Dashboard
Vào material ui, xem Button

10:00
Tạo icon cho menu
<li>
    <Button className='w-100'>
    <span className='icon'><RxDashboard/></span>
    Dashboard
    <span className='arrow'><FaAngleRight/></span>
    </Button>
</li>

12:45
Thiết kế, sắp xếp nút và icon

14:15
Tách xa mũi tên qua bên phải
.main .sidebarWrapper .sidebar ul li button .arrow {margin-left: auto;}

16:40
Copy paste thêm nhiều nút

19:50
button:hover

25:00
Tạo scroll cho sidebar

27:30
Khi hover vào sidebar, scrollbar xuất hiện. Bình thường thì không.
.main .sidebarWrapper .sidebar::-webkit-scrollbar {width: 3px !important;}
.main .sidebarWrapper .sidebar::-webkit-scrollbar-thumb {background: transparent !important;}
.main .sidebarWrapper:hover .sidebar::-webkit-scrollbar {background: #0858f7 !important;}

29:50
Gắn Link cho menu

36:15
Tạo đường thẳng bên trái submenu
.main .sidebarWrapper .sidebar ul .submenu li {width: 100%; list-style: none; border-left: 1px solid rgba(0, 0, 0, 0.1);} /* Create left line */

41:30
Tạo sự kiện isOpenSubmenu

43:30
Mỗi lần bấm nút, activeTab sẽ được gán 1 con số.
<Button className={`w-100 ${activeTab === 0 ? 'active' : ''}`}>

const [activeTab, setActiveTab] = useState(null);
const isOpenSubmenu = (index) => {
    setActiveTab(index)
}

Bấm vào nút, giá trị sẽ được đưa vào activeTab thông qua setActiveTab()
collapse sẽ làm submenu hiện ra hay ẩn đi.

53:45
Làm tương tự với các nút khác

55:15
Logout

1:00:00
Tạo các vòng tròn nhỏ ở background
.logoutWrapper .logoutBox::before {content: ''; width: 70px; height: 70px; background: #0858f7; border-radius: 100%; position: absolute; top: -20px; right: -20px; opacity: 0.5;}
.logoutWrapper .logoutBox::after {content: ''; width: 30px; height: 30px; background: #0858f7; border-radius: 100%; position: absolute; top: 20px; left: 10px; opacity: 0.5;}

1:03:00
Xoay nút mũi tên khi click vào menu
.main .sidebarWrapper .sidebar ul li button.active .arrow {transform: rotate(90deg);}

==============================================================
Video 4: Dashboard

2:20

4:05
Vào file Dashboard -> index.js

9:30
Tạo 4 ô trong Dashboard

13:20
Tạo file pages -> Dashboard -> components -> dashboardBox.js

16:00
Tạo màu cho dashboardBox
Nhập vào color={["#1da256","#48d483"]}
color truyền vào dashboardBox.js dưới dạng props

31:00
Truyền icon vào từng box, thông qua props.
<div className="ml-auto">
    {
        props.icon ?
        <span className="icon">
            {props.icon ? props.icon : ''}
        </span>
        :
        ''
    }
</div>

33:30
Truyền các icon khác

37:00
Tạo dòng Last Month
<div className="d-flex align-items-center">
    <h6 className="text-white mb-0 mt-0">Last Month</h6>
    <span className="ml-auto toggleIcon"><HiDotsVertical/></span>
</div>

40:30
Biến các dashboardBox thành các button

41:30
Tạo các hình ảnh TrendingUp và TrendingDown đằng sau background

48:50
https://mui.com/material-ui/react-menu/
Tìm các menu được mở từ nút 3 chấm.

56:40
Thiết kế box bên phải

1:00:30
Thiết kế nội dung box bên phải

1:05:00
Điền số liệu vào box bên phải

1:05:50
Chart in React
npm install --save react-google-charts

export const data = [
    ["Year", "Sales", "Expenses"],
    ["2013", 1000, 400],
    ["2014", 1170, 460],
    ["2015", 660, 1120],
    ["2016", 1030, 540],
];

export const options = {
    title: "Company Performance",
    hAxis: { title: "Year", titleTextStyle: {color: "#333" }},
    vAxis: { minValue: 0 },
    chartArea: { width: "50%", height: "70%"},
};

<Chart
    chartType="AreaChart"
    width="100%"
    height="200px"
    data={data}
    options={options}
/>

1:09:15
Remove background Google Chart
'backgroundColor': 'transparent'

1:10:30
set color in Google Chart text React
legendTextStyle: {color: '#FFF'},
titleTextStyle: {color: '#FFF'},
hAxis: {color: "#FFF"},

1:14:25
Remove margin padding in Google Chart in ReactJS

1:16:00
Tạo tiêu đề danh sách

==============================================================
Video 5: danh sách

00:15
Tạo tiêu đề danh sách

2:50
https://mui.com/material-ui/react-select/
Tìm Basic select

4:30
Copy vào Dashboard -> index.js
Tạo nút Show By

6:50
Copy Show By thành Category By

8:00
Copy labelId="demo-select-small-label" vào <Select> của Show By và Category By

11:30
Tạo bảng
Tạo tiêu đề

15:50
Tạo các dòng nội dung

18:45
Tạo nút action, edit, delete
<div className="actions d-flex align-items-center">
    <Button className="secondary" color="secondary"><FaEye/></Button>
    <Button className="success" color="success"><FaPencilAlt/></Button>
    <Button className="error" color="error"><MdDelete/></Button>
</div>

29:00
Tạo class v-align

30:45
Tạo discount

38:00
Hình ảnh kế bên giá

45:30
Tạo dòng mới

48:35
Pagination

==============================================================
Video 6: nút menu ẩn/hiện

2:30
Showing 12 of 60 results

3:50
const MyContext = createContext();
<MyContext.Provider>

4:50
Header index.js
const context = useContext(MyContext);

6:05 - 9:00
const [isToggleSidebar, setIsToggleSidebar] = useState(false);

const values = {
  isToggleSidebar,
  setIsToggleSidebar
};

useEffect(() => {
  alert(isToggleSidebar)
},[isToggleSidebar])

Header index.js
<div className="col-sm-3 d-flex align-items-center part2 pl-4">
  <Button
      className="rounded-circle mr-3"
      onClick={() => context.setIsToggleSidebar(!context.isToggleSidebar)}
  >
  {
      context.isToggleSidebar === false ? <MdMenuOpen/> : <MdOutlineMenu/>
  }
  </Button>
  <SearchBox />
</div>

Bấm nút menu, alert ra kết quả true/false là đúng.
Icon thay đổi <MdMenuOpen/> và <MdOutlineMenu/>

10:00
Thêm class toggle mỗi khi click nút menu.

11:36
CSS cho toggle

==============================================================
Video 7: đăng nhập

3:25
header .part3 {padding-left: 100px;}

5:50
Button Sign In
Tạo const [isLogin, setIsLogin] = useState(false);
isLogin !== true hiển thị nút Sign In
Ngược lại, hiển thị avatar

7:54
App.js thêm Route /login
Tạo pages -> Login -> index.js

App.js thêm
const [isLogin, setIsLogin] = useState(false);
const [isHideSidebarAndHeader, setIsHideSidebarAndHeader] = useState(false);

const values = {
  isToggleSidebar,
  setIsToggleSidebar,
  isLogin,
  setIsLogin,
  isHideSidebarAndHeader,
  setIsHideSidebarAndHeader
};

14:20
Ẩn sidebar và header nếu đây là trang login.

17:00
Thiết kế trang login ở file Login -> index.js

19:00
Thiết kế background
Download hình nền từ link mironcoder-hotash.netlify.app/images/pattern.webp
Để vào thư mục src -> assets -> images

23:50
Thiết kế form bên dưới

26:00
Tạo form và các input

31:00
Thiết kế icon cho input

34:35
onFocus cho input

38:00
Tạo nút ẩn hiện password

43:00
Tạo Button Sign In

45:00
Link Forgot Password

47:50
Tạo vạch "OR"

52:00
Tạo nút đăng nhập bằng mạng xh.

57:00
Tạo ô register

==============================================================
Video 8: đăng ký
Copy giống file Login -> index.js qua SignUp

5:00
Thiết kế form login sang bên phải

11:20
Tạo thêm input

13:25
Thêm nút check cho confirm password

15:25
Đổi tên Sign Up

17:00
Tạo checkbox

19:35
Tạo văn bản

22:50
Tạo nút Go To Home

25:35
Lỗi: khi bấm nút Go To Home, menu trang dashboard không hiện ra.
Hoặc từ màn hình Đăng Nhập, back về trang dashboard bằng trình duyệt, menu cũng không hiện ra.
Giải pháp: dashboard -> index.js thêm
const context = useContext(MyContext);

useEffect(()=>{
    context.setIsHideSidebarAndHeader(false);
})


==============================================================
Video 9: đổi màu

1:45
autoFocus

5:00


7:45
onclick cho nút theme

11:10
Kết quả: mở tab Application -> storage của trình duyệt. Click vào nút theme. themeMode thay đổi kết quả là đúng.

13:00
Thêm CSS.
Kết quả: Click vào nút theme. Phần header thay đổi màu.
body.dark header {background: #112143 !important;}
body.dark header button.rounded-circle {background: #12254e !important;}
body.dark header button.rounded-circle svg {color: #FFF !important;}
body.dark .searchBox {background: #12254e !important;}
body.dark .searchBox input, body.dark .searchBox input::-webkit-input-placeholder, .searchBox svg {color: #FFF !important;}

17:00
const [themeMode, setThemeMode] = useState(true);

Thiết kế Header, User Info.

19:20
Thiết kế Notification

21:10
Thiết kế Sidebar

25:20
Thiết kế Logout

27:20
Thiết kế Body

27.50
Thiết kế List

35:00
Thiết kế Pagination

==============================================================
Video 10: trang detail
Thiết kế Login

2:00
Tạo pages -> ProductDetails -> index.js
Tạo StyledBreadcrumb
Tạo Import

4:00
Tạo route tại App.js

5:00
Kiểm tra trang product/details hiển thị chính xác

6:40
Thiết kế Product Gallery, Product Details

8:15
slick-slider

9:00
https://www.npmjs.com/package/react-slick
Copy var settings từ trang web, đổi tên thành productSliderOptions
var productSliderOptions = {
    dots: false,
    infinite: false,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1
};

<Slider {...productSliderOptions}>
    <div className="item">
        <img src="https://mironcoder-hotash.netlify.app/images/product/single/01.webp" className="w-100" />
    </div>
</Slider>



10:25
Copy từ trang web dán vào index.html
<link
  rel="stylesheet"
  type="text/css"
  charset="UTF-8"
  href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css"
/>
<link
  rel="stylesheet"
  type="text/css"
  href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css"
/>
10:45
Quay lại trang product detail
Nếu thấy mất nút previous và next thì code đúng.

11:00
Thiết kế slider

12:10
Tạo productSliderSmlOptions
Tạo hình sản phẩm nhỏ bên dưới
Thiết kế slider nhỏ

17:30
Xem kết quả
Thiết kế Product Details

28:00
Thiết kế productInfo

30:20
Tạo dấu hai chấm

33:10
Tạo ô cho từng tag

41:00
Copy ô cho các mục Color, Size

43:00
<h4 className="mt-4">Product Description</h4>

46:00
<h5 className="mt-4 mb-3">Rating Analytics</h5>

47:45
Tạo đường line trong Rating
https://www.w3schools.com/bootstrap4/bootstrap_progressbars.asp

56:00
Kết quả: có đường line
Tô màu cho line

57:20
Copy thêm nhiều đường rating khác.

1:00:00
Tạo mục bình luận

1:02:30
Tạo components -> userAvatarImg -> index.js





==============================================================
Popup: nguồn từ các video
https://www.youtube.com/watch?v=Gy4G68WoHq4
https://www.youtube.com/watch?v=9DwGahSqcEc
https://mui.com/material-ui/react-modal/

==============================================================
React Google Login 2024
https://www.youtube.com/watch?v=WhbtXwSnzNo
